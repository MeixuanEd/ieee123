///////////////////////////////////////////////////////
//
// IEEE 123 realtime simulation model
// Copyright (C) 2016, Stanford University
// Author: dchassin@slac.stanford.edu
//
///////////////////////////////////////////////////////

//
// Read the configuration file for this system
//
#ifexist config.glm
#include "config.glm"
#endif

//
// Check the configuration
//
#ifndef PORT // this is required and defined in config.glm
#error config.glm load failed: if you have not already done so you must copy config-template.glm to config.glm and edit it before starting the service
#endif

///////////////////////////////////////////////////////
//
// BASIC SETTINGS
//
///////////////////////////////////////////////////////
#set randomseed=1

//
// Realtime run
//
#ifndef HISTORY

#print Setting up realtime server on ${HOSTNAME}:${PORT}
#option server // enables the server
#ifdef HOSTNAME
#set hostname=${HOSTNAME}  // tells clients where to get the data
#else
#error HOSTNAME is not defined in either your environment or in config.glm
#endif
#set run_realtime=1 // tells the server to run in realtime mode
#set server_portnum=${PORT} // is the port that clients will connect to
#set suppress_repeat_messages=FALSE // allow all similar messages to be logged
clock {
	timezone ${TIMEZONE};
}
//
// Historical run
//
#else

#print Setting up history run from ${HISTORY_START_MONTH}/1/${HISTORY_YEAR} to ${HISTORY_END_MONTH}/1/${HISTORY_YEAR}...
clock {
	timezone ${TIMEZONE};
	starttime '${HISTORY_YEAR}-${HISTORY_START_MONTH}-01 00:00:00 PST';
	stoptime '${HISTORY_YEAR}-${HISTORY_END_MONTH}-01 00:00:00 PST';
}

#endif

///////////////////////////////////////////////////////
//
// WEATHER
//
///////////////////////////////////////////////////////
#ifndef TMYTYPE
#warning TMYTYPE is not defined, using tmy2 by default
#define TMYTYPE=tmy2
#endif
#ifexist ${STATE}-${CITY}.${TMYTYPE}
#define TMY=${STATE}-${CITY}.${TMYTYPE}
#endif
#ifndef TMY
#error TMY file ${STATE}-${CITY}.${TMYTYPE} is not found; you must install this file in $HOME
#endif
#print Loading climate data for ${CITY} ${STATE}...
module climate;
class climate {
        double elevation[m];
}

object climate {
        name weather;
        city "${CITY} ${STATE}";
        tmyfile "${TMY}";
        elevation 150;
        interpolate QUADRATIC;
}

///////////////////////////////////////////////////////
//
// POWER SYSTEM MODEL
//
///////////////////////////////////////////////////////
#print Loading power system model...

module powerflow {
	solver_method NR;
	line_capacitance true;
	convergence_error_handling IGNORE;
}
#if SOLAR==yes
module generators;
#endif

#ifdef VOLTDUMP
#print Voltage dump to ${VOLTDUMP} is enabled...
object voltdump {
	filename ${VOLTDUMP};
	group "nodevolts";
	mode polar;
}
#endif

#ifdef CURRDUMP
#print Current dump to ${CURRDUMP} is enabled...
object currdump {
	filename ${CURRDUMP};
	mode rect;
}
#endif

//
// Powerflow component configurations
//
#include "library.glm"

//
// Power system topology
//
#include "feeder.glm"
#include "lateral.glm"

//
// Power system geoinformation
//
#include "geolocation.glm"

///////////////////////////////////////////////////////
//
// MYSQL DATABASE SUPPORT
//
///////////////////////////////////////////////////////
#ifndef MYSQLHOST
#define MYSQLHOST=localhost
#endif
#print Setting up database for model ${NAME} on ${MYSQLHOST}...
module mysql {
	hostname "${MYSQLHOST}";
	username "gridlabd";
	password "gridlabd";
#ifdef SOCKETNAME
#print Using socket ${SOCKETNAME} for MySQL...
	socketname "${SOCKETNAME}";
#else
#print Using default port 3306 for MySQL...	
#endif
}

#ifdef MYSQL_SCADA
#print Setting SCADA tables ${MYSQL_SCADA}...
object database {
	name scada;
	schema "${MYSQL_SCADA}";
#ifdef HISTORY
	options NEWDB; // only rebuild database for history runs
#endif
}
#endif

#ifdef MYSQL_AMI
#print Setting AMI tables in ${MYSQL_AMI}...
object database {
	name ami;
	schema "${MYSQL_AMI}";
#ifdef HISTORY
	options NEWDB; // only rebuild database for history runs
#endif
}
#endif

///////////////////////////////////////////////////////
//
// LOAD MODEL
//
///////////////////////////////////////////////////////
#if LOADS==yes
#include "loads.glm"
#else
#if SOLAR==yes
#include "loads.glm"
#endif
#endif

///////////////////////////////////////////////////////
//
// DATA COLLECTION
//
///////////////////////////////////////////////////////

//
// SCADA recorders
//
#ifdef MYSQL_SCADA
#print Setting up SCADA monitoring system...
#include "scada.glm"
#endif

///////////////////////////////////////////////////////
//
// CONTROLS
//
///////////////////////////////////////////////////////
#ifdef MYSQL_SCADA
#print Setting up SCADA control system...
#include "control.glm"
#endif

///////////////////////////////////////////////////////
//
// MODEL EXPORT
//
///////////////////////////////////////////////////////

#ifdef MYSQL_MODEL
#print Exporting system model to mysql schema ${NAME}_model...
export mysql ${NAME}_model;
#endif

#print Load complete.
